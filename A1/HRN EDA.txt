setwd("C:/Course - Statistics and Gambling/Horse Racing")

hrn = read.csv("HRN scraped data 2023-10-11.csv")


library(plyr)
library(ggplot2)

# First look at the data
head(hrn)

# First, how do the winning odds change with final place.

ddply(hrn, "horse_place", summarize,
      mean_odds = mean(horse_odds_decimal),
      sd_odds = sd(horse_odds_decimal))
      
# They do change. Will a set of histograms help?

p1 <- ggplot(hrn, aes(x=horse_odds_decimal, fill=horse_place)) +
    geom_histogram(alpha=0.6, binwidth = 1) +
    facet_wrap(~horse_place)
    
p1


# If we log-transform, it should make 1st, 2nd, 3rd, easier to see


hrn$log_odds = log(hrn$horse_odds_decimal)

p2 <- ggplot(hrn, aes(x=log_odds, fill=horse_place)) +
    geom_histogram(alpha=0.6, binwidth = 0.5) +
    facet_wrap(~horse_place)
    
p2

# Are the 1st place and 2nd place horses really so similar in odds?

hrn12 = subset(hrn, horse_place <= 2)

p3 <- ggplot(hrn12, aes(x=horse_odds_decimal, fill=horse_place)) +
    geom_histogram(alpha=0.6, binwidth = 1) +
    facet_wrap(~horse_place)
    
p3


# Let's flip the problem on its head. Looking at distribution of place as a function of decimal odds

hrn$round_odds0.1 = round(hrn$horse_odds_decimal, 1)
hrn$floor_odds = floor(hrn$horse_odds_decimal)

tab1 = table(hrn$floor_odds, hrn$horse_place)
tab1

# Floor of zero? Is that a mistake?

hrn[which(hrn$horse_odds_decimal < 1),]

# No, Kazushi Kimura is just really REALLY good as a jockey.
# Now let's look at the outcomes as a proportion of the horses

tab2 = round(prop.table(tab1, 1),3)
tab2

# So the horses that pay less than 1/1 (plus your $1 back) win 57.1% of the time
# The horses that pay between 1/1 and 2/1 win 36.9% of the time, and so on.
# Let's plot this, 
# and overlay 1/(x+1) to it as well because that's the "implied probability"
# in otherwords, if the odds on offer were "fair, that's what the win probability would be

actual_win_pr = tab2[,1]
implied_win_pr = 1/(as.numeric(row.names(tab2)) + 1)
floor_odds = as.numeric(row.names(tab2))

plot(floor_odds, actual_win_pr, type="b", lwd=3, col="Red", ylim=c(0,1))
lines(floor_odds, implied_win_pr, type="b", lwd=3, col="Blue", lty=3)


The blue line is 'fair' winning prob at a horse racetrack,
the red line is the actual winning prob. The fact that the red line is always a bit below the blue line shows the consistent house advantage, which is expected

Because we took the floor of each odds offered, not the actual odds, the house advantage is exaggerated, especially at the low odds (the short odds).

We can also get a ratio of actual to implied odds


plot(floor_odds, actual_win_pr / implied_win_pr, type="b", lwd=3, col="Red", ylim=c(0,1))
abline(h=1, lty=3, lwd=3, col="Blue")

It looks like horses that pay between 7-to-1 and 10-to-1 are the best bets. However, we don't know the actual odds until just before race time, so this strategy is hard to refine. If we could predict the odds that would be paid out in advance (which we can model), and fit the probability of each horse winning each race (which we can also model), then we could look for discrepancies where we expect a horse to pay a better than fair price. This graph suggests we would find such horses in the 7-to-1 to 10-to-1 range.

Note that this isn't the horses that most likely to win, they're the horses that have the largest payouts relative to their chance to win.